<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>netcoreapp3.1</TargetFramework>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
    <SpaRoot>ClientApp\</SpaRoot>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
    <RootNamespace>EasyStudy</RootNamespace>
  </PropertyGroup>

  <ItemGroup>
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Content Remove="$(SpaRoot)**" />
    <None Remove="$(SpaRoot)**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
  </ItemGroup>

  <ItemGroup>
    <None Remove="C:\Users\User\.nuget\packages\linq2db.postgresql\3.1.3\contentFiles\any\any\LinqToDB.Templates\CopyMe.PostgreSQL.tt.txt" />
    <None Remove="C:\Users\User\.nuget\packages\linq2db.postgresql\3.1.3\contentFiles\any\any\LinqToDB.Templates\DataAnnotations.ttinclude" />
    <None Remove="C:\Users\User\.nuget\packages\linq2db.postgresql\3.1.3\contentFiles\any\any\LinqToDB.Templates\DataModel.ttinclude" />
    <None Remove="C:\Users\User\.nuget\packages\linq2db.postgresql\3.1.3\contentFiles\any\any\LinqToDB.Templates\EditableObject.ttinclude" />
    <None Remove="C:\Users\User\.nuget\packages\linq2db.postgresql\3.1.3\contentFiles\any\any\LinqToDB.Templates\Equatable.ttinclude" />
    <None Remove="C:\Users\User\.nuget\packages\linq2db.postgresql\3.1.3\contentFiles\any\any\LinqToDB.Templates\Humanizer.ttinclude" />
    <None Remove="C:\Users\User\.nuget\packages\linq2db.postgresql\3.1.3\contentFiles\any\any\LinqToDB.Templates\LinqToDB.PostgreSQL.Tools.ttinclude" />
    <None Remove="C:\Users\User\.nuget\packages\linq2db.postgresql\3.1.3\contentFiles\any\any\LinqToDB.Templates\LinqToDB.PostgreSQL.ttinclude" />
    <None Remove="C:\Users\User\.nuget\packages\linq2db.postgresql\3.1.3\contentFiles\any\any\LinqToDB.Templates\LinqToDB.Tools.ttinclude" />
    <None Remove="C:\Users\User\.nuget\packages\linq2db.postgresql\3.1.3\contentFiles\any\any\LinqToDB.Templates\LinqToDB.ttinclude" />
    <None Remove="C:\Users\User\.nuget\packages\linq2db.postgresql\3.1.3\contentFiles\any\any\LinqToDB.Templates\MultipleFiles.ttinclude" />
    <None Remove="C:\Users\User\.nuget\packages\linq2db.postgresql\3.1.3\contentFiles\any\any\LinqToDB.Templates\NotifyDataErrorInfo.ttinclude" />
    <None Remove="C:\Users\User\.nuget\packages\linq2db.postgresql\3.1.3\contentFiles\any\any\LinqToDB.Templates\NotifyPropertyChanged.ttinclude" />
    <None Remove="C:\Users\User\.nuget\packages\linq2db.postgresql\3.1.3\contentFiles\any\any\LinqToDB.Templates\ObsoleteAttributes.ttinclude" />
    <None Remove="C:\Users\User\.nuget\packages\linq2db.postgresql\3.1.3\contentFiles\any\any\LinqToDB.Templates\PluralizationService.ttinclude" />
    <None Remove="C:\Users\User\.nuget\packages\linq2db.postgresql\3.1.3\contentFiles\any\any\LinqToDB.Templates\T4Model.ttinclude" />
    <None Remove="C:\Users\User\.nuget\packages\linq2db.postgresql\3.1.3\contentFiles\any\any\LinqToDB.Templates\Validation.ttinclude" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.AspNetCore.Authentication.JwtBearer" Version="3.1.0" />
    <PackageReference Include="Microsoft.AspNetCore.Identity.EntityFrameworkCore" Version="3.1.0" />
    <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="3.1.0" />
    <PackageReference Include="Microsoft.EntityFrameworkCore" Version="3.1.0" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.SqlServer" Version="3.1.0" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.SqlServer.Design" Version="1.1.6" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Tools" Version="3.1.0">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.Extensions.Logging.Debug" Version="3.1.0" />
    <PackageReference Include="Microsoft.IdentityModel.Tokens" Version="5.6.0" />
    <PackageReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Design" Version="3.1.1" />
    <PackageReference Include="Npgsql.EntityFrameworkCore.PostgreSQL" Version="3.1.0" />
    <PackageReference Include="Npgsql.EntityFrameworkCore.PostgreSQL.Design" Version="1.1.0" />
    <PackageReference Include="Serilog.AspNetCore" Version="3.2.0" />
    <PackageReference Include="Serilog.Extensions.Logging" Version="3.0.1" />
    <PackageReference Include="Serilog.Sinks.ColoredConsole" Version="3.0.1" />
    <PackageReference Include="Swashbuckle.AspNetCore.Swagger" Version="5.6.3" />
    <PackageReference Include="Swashbuckle.AspNetCore.SwaggerGen" Version="5.6.3" />
    <PackageReference Include="Swashbuckle.AspNetCore.SwaggerUI" Version="5.6.3" />
    <PackageReference Include="System.Drawing.Common" Version="4.7.0" />
    <PackageReference Include="System.IdentityModel.Tokens.Jwt" Version="5.6.0" />
  </ItemGroup>

  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build" />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)build\**; $(SpaRoot)build-ssr\**" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>

</Project>
